from typing import Any, Type

from pydantic import BaseModel


class BaseAliasedModel(BaseModel):
    class Config:
        allow_population_by_field_name = True

        @classmethod
        def schema_extra(cls, schema: dict[str, Any], model: Type['BaseModel']) -> None:
            """
            The schema is generated by default using aliases as keys.
            We want to use original fields names.
            Modified from:
            - https://pydantic-docs.helpmanual.io/usage/schema/#schema-customization
            """
            properties = {
                field.name: schema['properties'][field.alias]
                for field in model.__fields__.values()
            }

            schema.update({'properties': properties})


class BaseSDModelOut(BaseAliasedModel):
    status: str
    message: str | None
